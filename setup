#!/bin/bash

# This is a general-purpose function to ask Yes/No questions in Bash, either
# with or without a default answer. It keeps repeating the question until it
# gets a valid answer.
ask() {
    # https://djm.me/ask
    local prompt default reply

    if [ "${2:-}" = "Y" ]; then
        prompt="Y/n"
        default=Y
    elif [ "${2:-}" = "N" ]; then
        prompt="y/N"
        default=N
    else
        prompt="y/n"
        default=
    fi

    while true; do

        # Ask the question (not using "read -p" as it uses stderr not stdout)
        echo -n "$1 [$prompt] "

        # Read the answer (use /dev/tty in case stdin is redirected from somewhere else)
        read reply </dev/tty

        # Default?
        if [ -z "$reply" ]; then
            reply=$default
        fi

        # Check if the reply is valid
        case "$reply" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac

    done
}

install_bash_aliases() {
	cp .bash_aliases "$HOME/"
}
if [ -e "$HOME/.bash_aliases" ]; then
	ask "~/.bash_aliases already exists, are you sure you want to replace it?" Y && install_bash_aliases
else
	install_bash_aliases
fi

install_common_bash() {
	cp .common.bash "$HOME/"
}
if [ -e "$HOME/.common.bash" ]; then
	ask "~/.common.bash already exists, are you sure you want to replace it?" Y && install_common_bash
else
	install_common_bash
fi

install_vimrc() {
	cp .vimrc "$HOME/"
}
if [ -e "$HOME/.vimrc" ]; then
	ask "~/.vimrc already exists, are you sure you want to replace it?" Y && install_vimrc
else
	install_vimrc
fi

install_tmux_conf () {
	cp .tmux.conf "$HOME/"
}
if [ -e "$HOME/.tmux.conf" ]; then
	ask "~/.tmux.conf already exists, are you sure you want to replace it?" Y && install_tmux_conf
else
	install_tmux_conf
fi

install_bashrc() {
	cp .bashrc "$HOME/"
	[ -n "`echo $BASH_VERSION`" ] && source "$HOME/.bashrc"
}
if [ -e "$HOME/.bashrc" ]; then
	ask "~/.bashrc already exists, are you sure you want to replace it?" Y && install_bashrc
else
	install_bashrc
fi

install_zshrc() {
	cp .zshrc "$HOME/"
	[ -n "`echo $ZSH_VERSION`" ] && source "$HOME/.zshrc"
}
if [ -e "$HOME/.zshrc" ]; then
	ask "~/.zshrc already exists, are you sure you want to replace it?" Y && install_zshrc
else
	install_zshrc
fi
